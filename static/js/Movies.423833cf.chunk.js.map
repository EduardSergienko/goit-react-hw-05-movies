{"version":3,"file":"static/js/Movies.423833cf.chunk.js","mappings":"8LACA,EAAuB,wBAAvB,EAA0D,4B,SCE7CA,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CACED,UAAWC,EACXC,GAAE,kBAAaL,GACfM,MAAO,CAAEC,KAAMN,GAHjB,SAKGF,Q,kECXF,SAASS,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAC1B,OAAO,wBAAKA,M,yICFd,EAA4B,6B,SCGrB,SAASC,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACpC,GAA4CC,EAAAA,EAAAA,UAASD,GAArD,eAAOE,EAAP,KAAuBC,EAAvB,KAgBA,OACE,kBAAMZ,UAAWC,EAAkBO,SAXZ,SAAAK,GAEvB,GADAA,EAAEC,iBAC4B,KAA1BH,EAAeI,OAGjB,OAAOC,IAAAA,OAAAA,QACL,4EAHFR,EAASG,IAQX,WACE,kBAAOF,MAAOE,EAAgBM,KAAK,OAAOC,SAhBtB,SAAAL,GACtBD,EAAkBC,EAAEM,cAAcV,WAgBhC,mBAAQQ,KAAK,SAAb,uB,2CCfS,SAASG,IAAU,IAAD,EAC/B,GAAoCV,EAAAA,EAAAA,UAAS,IAA7C,eAAOW,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WAAM,wCACd,yFACgB,KAAVF,EADN,2EAM2BG,EAAAA,EAAAA,IAAeH,GAN1C,mBAMYI,EANZ,EAMYA,KAERR,EAAcQ,EAAKC,SAES,IAAxBD,EAAKC,QAAQC,OAVrB,0CAWahB,IAAAA,OAAAA,QACL,6EAZR,qHADc,uBAAC,WAAD,wBAkBdiB,KACC,CAACP,IAMJ,OACE,iCACE,SAACnB,EAAD,CAAWE,MAAOiB,EAAOlB,SANZ,SAAAsB,GACfL,EAAgB,CAAEC,MAAOI,EAAKI,cAAcnB,aAM1C,SAACV,EAAA,EAAD,UACGgB,EAAWc,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACrB,OAAO,SAAC1C,EAAA,EAAD,CAAoBC,UAAWyC,EAAOxC,QAASuC,GAA/BA,a,0MCxC1B,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,oFACY,kDACD,2CAFX,SAGQC,IAAAA,IAAA,UAFI,kDAEJ,YADG,6CAFX,0GAMA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAA8BW,GAA9B,uEACY,4CACD,2CAFX,SAGQD,IAAAA,IAAA,UAFI,4CAEJ,YADG,2CACH,kBACqBC,EADrB,oBAHR,0GAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,uEACY,sCACD,2CAFX,SAGQG,IAAAA,IAAA,UAFI,uCAEJ,OAAwBH,EAAxB,YADG,2CACH,oBAHR,0GAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BN,GAA9B,uEACY,sCACD,2CAFX,SAGQG,IAAAA,IAAA,UAFI,uCAEJ,OAAwBH,EAAxB,oBADG,2CACH,oBAHR,0GAMA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,uEACY,sCACD,2CAFX,SAGQG,IAAAA,IAAA,UAFI,uCAEJ,OAAwBH,EAAxB,oBADG,2CACH,oBAHR","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.scss?bf85","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.scss?25b4","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/MovieApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__9621Y\",\"itemLink\":\"MovieItem_itemLink__nrIXO\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './MovieItem.module.scss';\nimport PropTypes from 'prop-types';\nexport const MovieItem = ({ filmTitle, movieId }) => {\n  const location = useLocation();\n\n  return (\n    <li className={styles.item}>\n      <Link\n        className={styles.itemLink}\n        to={`/movies/${movieId}`}\n        state={{ from: location }}\n      >\n        {filmTitle}\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  filmTitle: PropTypes.string.isRequired,\n  movieId: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport function MovieList({ children }) {\n  return <ul>{children}</ul>;\n}\n\nMovieList.propTypes = {\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__pOkDi\"};","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.scss';\nexport function SearchBar({ onSubmit, value }) {\n  const [serachBarQuery, setSerachBarQuery] = useState(value);\n\n  const handleInputType = e => {\n    setSerachBarQuery(e.currentTarget.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (serachBarQuery.trim() !== '') {\n      onSubmit(serachBarQuery);\n    } else {\n      return Notiflix.Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n  };\n  return (\n    <form className={styles.searchbar} onSubmit={handleFormSubmit}>\n      <input value={serachBarQuery} type=\"text\" onChange={handleInputType} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { movieSearching } from 'services/MovieApi';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nexport default function Movies() {\n  const [moviesData, setMoviesData] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    async function searchMovie() {\n      if (query === '') {\n        return;\n      }\n\n      try {\n        const { data } = await movieSearching(query);\n\n        setMoviesData(data.results);\n\n        if (data.results.length === 0) {\n          return Notiflix.Notify.failure(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        }\n      } catch (error) {}\n    }\n    searchMovie();\n  }, [query]);\n\n  const formData = data => {\n    setSearchParams({ query: data.toLowerCase().trim() });\n  };\n\n  return (\n    <>\n      <SearchBar value={query} onSubmit={formData} />\n      <MovieList>\n        {moviesData.map(({ id, title }) => {\n          return <MovieItem key={id} filmTitle={title} movieId={id} />;\n        })}\n      </MovieList>\n    </>\n  );\n}\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n// const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport async function fetchTrandingFilms() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}?${API_KEY}`);\n}\n\nexport async function movieSearching(searchQuery) {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(\n    `${BASE_URL}?${API_KEY}&query=${searchQuery}&language=en-US`\n  );\n}\n\nexport async function getMovieDetails(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}?${API_KEY}&language=en-US`);\n}\n\nexport async function getCastDetails(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/credits?${API_KEY}&language=en-US`);\n}\n\nexport async function getMovieReviews(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/reviews?${API_KEY}&language=en-US`);\n}\n"],"names":["MovieItem","filmTitle","movieId","location","useLocation","className","styles","to","state","from","MovieList","children","SearchBar","onSubmit","value","useState","serachBarQuery","setSerachBarQuery","e","preventDefault","trim","Notiflix","type","onChange","currentTarget","Movies","moviesData","setMoviesData","useSearchParams","searchParams","setSearchParams","query","get","useEffect","movieSearching","data","results","length","searchMovie","toLowerCase","map","id","title","fetchTrandingFilms","axios","searchQuery","getMovieDetails","getCastDetails","getMovieReviews"],"sourceRoot":""}