{"version":3,"file":"static/js/644.1338a39e.chunk.js","mappings":"qLACA,EAAuB,wBAAvB,EAA0D,4B,SCE7CA,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACrC,OACE,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAiBC,GAAE,kBAAaH,GAAjD,SACGD,Q,kECLF,SAASK,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAC1B,OAAO,wBAAKA,M,yICFd,EAA4B,6B,SCGrB,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAC1B,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAgBA,OACE,kBAAMT,UAAWC,EAAkBK,SAXZ,SAAAI,GAEvB,GADAA,EAAEC,iBAC4B,KAA1BH,EAAeI,OAGjB,OAAOC,IAAAA,OAAAA,QACL,4EAHFP,EAASE,IAQX,WACE,kBAAOM,KAAK,OAAOC,SAhBC,SAAAL,GACtBD,EAAkBC,EAAEM,cAAcC,WAgBhC,mBAAQH,KAAK,SAAb,uB,kCCjBC,SAASI,IACd,OAAkCX,EAAAA,EAAAA,UAAS,IAA3C,eAAOY,EAAP,KAAkBC,EAAlB,KACA,GAAoCb,EAAAA,EAAAA,UAAS,IAA7C,eAAOc,EAAP,KAAmBC,EAAnB,KACAC,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,WAAM,wCACd,yFACoB,KAAdN,EADN,2EAK2BO,EAAAA,EAAAA,IAAeP,GAL1C,gBAKYQ,EALZ,EAKYA,KAERL,EAAcK,EAAKC,SAPvB,6GADc,uBAAC,WAAD,wBAWdC,KACC,CAACV,IAMJ,OACE,iCACE,SAACd,EAAD,CAAWC,SANE,SAAAqB,GACfP,EAAaO,OAMX,SAACxB,EAAA,EAAD,UACGkB,EAAWS,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACrB,OAAO,SAACnC,EAAA,EAAD,CAAoBC,UAAWkC,EAAOjC,QAASgC,GAA/BA,a,0MC7B1B,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,oFACY,kDACD,2CAFX,SAGQC,IAAAA,IAAA,UAFI,kDAEJ,YADG,6CAFX,0GAMA,SAAeR,EAAtB,+CAAO,OAAP,oBAAO,WAA8BS,GAA9B,uEACY,4CACD,2CAFX,SAGQD,IAAAA,IAAA,UAFI,4CAEJ,YADG,2CACH,kBACqBC,EADrB,oBAHR,0GAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,uEACY,sCACD,2CAFX,SAGQG,IAAAA,IAAA,UAFI,uCAEJ,OAAwBH,EAAxB,YADG,2CACH,oBAHR,0GAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BN,GAA9B,uEACY,sCACD,2CAFX,SAGQG,IAAAA,IAAA,UAFI,uCAEJ,OAAwBH,EAAxB,oBADG,2CACH,oBAHR,0GAMA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,uEACY,sCACD,2CAFX,SAGQG,IAAAA,IAAA,UAFI,uCAEJ,OAAwBH,EAAxB,oBADG,2CACH,oBAHR","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.scss?bf85","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.scss?25b4","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/MovieApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__9621Y\",\"itemLink\":\"MovieItem_itemLink__nrIXO\"};","import { Link } from 'react-router-dom';\nimport styles from './MovieItem.module.scss';\nimport PropTypes from 'prop-types';\nexport const MovieItem = ({ filmTitle, movieId }) => {\n  return (\n    <li className={styles.item}>\n      <Link className={styles.itemLink} to={`/movies/${movieId}`}>\n        {filmTitle}\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  filmTitle: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport function MovieList({ children }) {\n  return <ul>{children}</ul>;\n}\n\nMovieList.propTypes = {\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__pOkDi\"};","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.scss';\nexport function SearchBar({ onSubmit }) {\n  const [serachBarQuery, setSerachBarQuery] = useState('');\n\n  const handleInputType = e => {\n    setSerachBarQuery(e.currentTarget.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (serachBarQuery.trim() !== '') {\n      onSubmit(serachBarQuery);\n    } else {\n      return Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    }\n  };\n  return (\n    <form className={styles.searchbar} onSubmit={handleFormSubmit}>\n      <input type=\"text\" onChange={handleInputType} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { movieSearching } from 'services/MovieApi';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nexport function Movies() {\n  const [formQuery, setFormQuery] = useState('');\n  const [moviesData, setMoviesData] = useState([]);\n  console.log(moviesData);\n  useEffect(() => {\n    async function searchMovie() {\n      if (formQuery === '') {\n        return;\n      }\n      try {\n        const { data } = await movieSearching(formQuery);\n\n        setMoviesData(data.results);\n      } catch (error) {}\n    }\n    searchMovie();\n  }, [formQuery]);\n\n  const formData = data => {\n    setFormQuery(data);\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={formData} />\n      <MovieList>\n        {moviesData.map(({ id, title }) => {\n          return <MovieItem key={id} filmTitle={title} movieId={id} />;\n        })}\n      </MovieList>\n    </>\n  );\n}\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n// const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport async function fetchTrandingFilms() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}?${API_KEY}`);\n}\n\nexport async function movieSearching(searchQuery) {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(\n    `${BASE_URL}?${API_KEY}&query=${searchQuery}&language=en-US`\n  );\n}\n\nexport async function getMovieDetails(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}?${API_KEY}&language=en-US`);\n}\n\nexport async function getCastDetails(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/credits?${API_KEY}&language=en-US`);\n}\n\nexport async function getMovieReviews(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n  return await axios.get(`${BASE_URL}${id}/reviews?${API_KEY}&language=en-US`);\n}\n"],"names":["MovieItem","filmTitle","movieId","className","styles","to","MovieList","children","SearchBar","onSubmit","useState","serachBarQuery","setSerachBarQuery","e","preventDefault","trim","Notiflix","type","onChange","currentTarget","value","Movies","formQuery","setFormQuery","moviesData","setMoviesData","console","log","useEffect","movieSearching","data","results","searchMovie","map","id","title","fetchTrandingFilms","axios","searchQuery","getMovieDetails","getCastDetails","getMovieReviews"],"sourceRoot":""}